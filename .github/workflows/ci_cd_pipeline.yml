# Archivo: .github/workflows/ci_cd_pipeline.yml
name: CI/CD Pipeline

# Se ejecuta en eventos push y pull_request a la rama principal
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *' # Ejecuta el workflow todas las noches a las 00:00

jobs:
  # Job 1: Realizar pruebas y chequeo de calidad
  build-and-test:
    name: Run Tests and Lint
    runs-on: ubuntu-latest  # Usa una máquina virtual de Ubuntu

    steps:
      # 1. Checkout: Clona el repositorio en la máquina virtual
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # 3. Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest flake8

      # 4. Ejecutar flake8 para chequeo de calidad
      - name: Run flake8 (Code Quality Check)
        run: |
          flake8 . --count --show-source --statistics

      # 5. Ejecutar pruebas con pytest
      - name: Run pytest
        run: |
          pytest tests/

      # 6. Notificación si todo sale bien
      - name: Successful Run
        run: echo "CI/CD Pipeline completed successfully!"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
